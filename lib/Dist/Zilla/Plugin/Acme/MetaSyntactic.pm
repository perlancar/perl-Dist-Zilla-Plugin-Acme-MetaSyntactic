package Dist::Zilla::Plugin::Acme::MetaSyntactic;

# DATE
# VERSION

use Moose;
with 'Dist::Zilla::Role::FileGatherer';
with 'Dist::Zilla::Role::PrereqSource';

use namespace::autoclean;

sub register_prereqs {
    # performed in gather_files
}

sub gather_files {
    my ($self) = @_;

    unless (grep { $_->name eq 't/meta.t' } @{ $self->zilla->files }) {
        my $content = <<EOF;
#!perl

# This file was automatically generated by ${\( __PACKAGE__ )}.

use Test::MetaSyntactic;
all_themes_ok();
EOF
        my $filename = 'xt/release/meta.t';
        $self->log(["Adding %s ...", $filename]);
        require Dist::Zilla::File::InMemory;
        $self->add_file(
            Dist::Zilla::File::InMemory->new({
                name => $filename,
                content => $content,
            })
          );
        $self->zilla->register_prereqs(
            {
                type  => 'requires',
                phase => 'test',
            },
            'Test::MetaSyntactic' => '0',
        );
    }
}

__PACKAGE__->meta->make_immutable;
1;
# ABSTRACT: Plugin to use when building Acme-MetaSyntactic-* theme distribution

=for Pod::Coverage .+

=head1 SYNOPSIS

In F<dist.ini>:

 [Acme::MetaSyntactic]


=head1 DESCRIPTION

This plugin can be used when building Acme-MetaSyntactic-* theme distribution.
It currently does the following:

=over

=item * Add a test script F<xt/release/meta.t> (which will become F<t/release-meta.t>) unless F<t/meta.t> already exists

The test script is something like:

 use Test::MetaSyntactic;
 all_themes_ok();

=back
